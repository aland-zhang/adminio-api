openapi: "3.0.0"
info:
  description: "Adminio API"
  version: "2.3.0"
  title: "Adminio API"
  contact:
    name: "rzrbld at github.com"
    url: "https://github.com/rzrbld/adminio-api/issues"
  license:
    name: "MIT"
    url: "https://github.com/rzrbld/adminio-api/blob/master/LICENSE"
servers:
  - url: http://localhost:8080/api/v2
paths:
  /buckets/list:
    get:
      summary: List all buckets
      operationId: listBuckets
      tags:
        - bucket
      responses:
        '200':
          description: List all buckets
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: "#/components/schemas/BucketList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /buckets/list-extended:
    get:
      summary: List all buckets with ARN's and Quota's
      operationId: listBucketsExtended
      tags:
        - bucket
      responses:
        '200':
          description: List all buckets plus ARN and Quota
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: "#/components/schemas/BucketListExtended"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /bucket/create:
    post:
      summary: Create a bucket
      operationId: createBucket
      tags:
        - bucket
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                newBucket:
                  type: string
                  format: string
                newBucketRegion:
                  type: string
                  format: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /bucket/delete:
    post:
      summary: Delete bucket
      operationId: deleteBucket
      tags:
        - bucket
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                bucketName:
                  type: string
                  format: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /bucket/remove-events:
    post:
      summary: remove bucket events notifications
      operationId: removeBucketEvents
      tags:
        - bucket
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                bucket:
                  type: string
                  format: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /bucket/set-events:
    post:
      summary: Set bucket events
      operationId: setBucketEvents
      tags:
        - bucket
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                bucket:
                  type: string
                  format: string
                eventTypes:
                  type: string
                  format: string
                filterPrefix:
                  type: string
                  format: string
                filterSuffix:
                  type: string
                  format: string
      responses:
        '200':
          description: lifecycle XML string or empty string if lifecycle does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /bucket/get-events:
    post:
      summary: Get bucket events
      operationId: getBucketEvents
      tags:
        - bucket
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                bucket:
                  type: string
                  format: string
      responses:
        '200':
          description: return bucket event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BucketEvent"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /bucket/get-lifecycle:
    post:
      summary: Get bucket lifecycle
      operationId: getBucketLifecycle
      tags:
        - bucket
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                bucketName:
                  type: string
                  format: string
      responses:
        '200':
          description: lifecycle XML string or empty string if lifecycle does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BucketLifecycle"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /bucket/set-lifecycle:
    post:
      summary: Set bucket lifecycle
      operationId: setBucketLifecycle
      tags:
        - bucket
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                bucketName:
                  type: string
                  format: string
                lifecycle:
                  description: lifecycle XML string
                  type: string
                  format: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /bucket/set-quota:
    post:
      summary: Set bucket quota
      operationId: setBucketQuota
      tags:
        - bucket
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                bucketName:
                  type: string
                  format: string
                quotaType:
                  type: string
                  format: string
                quotaValue:
                  description: quota size in bytes
                  type: string
                  format: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /bucket/get-quota:
    post:
      summary: Get bucket quota
      operationId: getBucketQuota
      tags:
        - bucket
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                bucketName:
                  type: string
                  format: string
      responses:
        '200':
          description: bucket quota
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BucketQuota"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /bucket/remove-quota:
    post:
      summary: Remove bucket quota
      operationId: removeBucketQuota
      tags:
        - bucket
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                bucketName:
                  type: string
                  format: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /bucket/set-tags:
    post:
      summary: Set bucket tags
      operationId: setBucketTags
      tags:
        - bucket
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                bucketName:
                  type: string
                  format: string
                bucketTags:
                  description: comma separated list of tags. e.g. `tag1=value1&tag2=value2`
                  type: string
                  format: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /bucket/get-tags:
    post:
      summary: Get bucket tags
      operationId: getBucketTags
      tags:
        - bucket
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                bucketName:
                  type: string
                  format: string
      responses:
        '200':
          description: bucket quota
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BucketTags"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/list:
    get:
      summary: List all users
      operationId: listUsers
      tags:
        - user
      responses:
        '200':
          description: List all users
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: "#/components/schemas/UserList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/set-status:
    post:
      summary: Set User status
      operationId: setUserStatus
      tags:
        - user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                accessKey:
                  type: string
                  format: string
                status:
                  enum: [enabled, disabled]
                  type: string
                  format: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/delete:
    post:
      summary: Delete User
      operationId: deleteUser
      tags:
        - user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                accessKey:
                  type: string
                  format: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/create:
    post:
      summary: Create User
      operationId: createUser
      tags:
        - user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                accessKey:
                  type: string
                  format: string
                secretKey:
                  type: string
                  format: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/create-extended:
    post:
      summary: Create User with bounded policy
      operationId: createUserWPolicy
      tags:
        - user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                accessKey:
                  type: string
                  format: string
                secretKey:
                  type: string
                  format: string
                policyName:
                  type: string
                  format: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /user/update:
    post:
      summary: Update User - change policy or status
      operationId: updateUser
      tags:
        - user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                accessKey:
                  type: string
                  format: string
                secretKey:
                  type: string
                  format: string
                policyName:
                  type: string
                  format: string
                status:
                  type: string
                  format: string
                  enum: [enabled, disabled]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /policies/list:
    get:
      summary: List all policies
      operationId: listPolicy
      tags:
        - policy
      responses:
        '200':
          description: List all policies
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: "#/components/schemas/PolicyList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /policy/create:
    post:
      summary: Create policy
      operationId: createPolicy
      tags:
        - policy
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                policyName:
                  type: string
                  format: string
                policyString:
                  type: string
                  format: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /policy/delete:
    post:
      summary: Delete policy
      operationId: deletePolicy
      tags:
        - policy
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                policyName:
                  type: string
                  format: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /policy/update:
    post:
      summary: Bound policy to user or group
      operationId: setPolicy
      tags:
        - policy
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                policyName:
                  description: Ploicy Name
                  type: string
                  format: string
                entityName:
                  description: Group or User name
                  type: string
                  format: string
                isGroup:
                  type: boolean
                  format: boolean
                  enum: [true,false]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /group/set-status:
    post:
      summary: Group set status
      operationId: groupSetStatus
      tags:
        - group
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                group:
                  description: Group Name
                  type: string
                  format: string
                status:
                  type: boolean
                  format: boolean
                  enum: [enabled,disabled]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /group/get-description:
    post:
      summary: Group get description
      operationId: groupGetDescription
      tags:
        - group
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                group:
                  description: Group Name
                  type: string
                  format: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupInfo"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /group/update-members:
    post:
      summary: Update Group members
      operationId: groupUpdateMembers
      tags:
        - group
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                group:
                  description: Group Name
                  type: string
                  format: string
                members:
                  description: multiple usernames with comma delimiter
                  type: string
                  format: string
                IsRemove:
                  description: set false if you need remove members from group
                  type: boolean
                  format: boolean
                  enum: [true,false]

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Success"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /groups/list:
    get:
      summary: List all groups
      operationId: groupsList
      tags:
        - group
      responses:
        '200':
          description: List all groups
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: "#/components/schemas/GroupList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /server/common-info:
    get:
      summary: Server basic info
      operationId: serverCommonInfo
      tags:
        - server
      responses:
        '200':
          description: Server Info
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: "#/components/schemas/ServerInfo"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /server/disk-info:
    get:
      summary: Server disk info
      operationId: serverDiskInfo
      tags:
        - server
      responses:
        '200':
          description: Server Disk Info
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: "#/components/schemas/ServerDisk"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /kv/get:
    post:
      summary: get value by key
      operationId: kvGet
      tags:
        - kv
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                keyString:
                  description: Group Name
                  type: string
                  format: string
      responses:
        '200':
          description: base64 string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetKV"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    GetKV:
      type: string
    ServerDisk:
      type: object
      properties:
        lastUpdate:
          type: string
        objectsCount:
          type: integer
        objectsTotalSize:
          type: integer
        objectsSizesHistogram:
          type: object
          properties:
           BETWEEN_1024_B_AND_1_MB:
             type: integer
           BETWEEN_10_MB_AND_64_MB:
             type: integer
           BETWEEN_128_MB_AND_512_MB:
             type: integer
           BETWEEN_1_MB_AND_10_MB:
             type: integer
           BETWEEN_64_MB_AND_128_MB:
             type: integer
           GREATER_THAN_512_MB:
             type: integer
           LESS_THAN_1024_B:
             type: integer
        bucketsCount:
          type: integer
        bucketsSizes:
          type: object
    ServerInfo:
      type: object
      properties:
       mode:
         type: string
       sqsARN:
         type: array
         items:
           type: string
       deploymentID:
         type: string
       buckets:
         type: object
         properties:
           count:
             type: integer
       objects:
         type: object
         properties:
           count:
             type: integer
       usage:
         type: object
         properties:
           size:
             type: integer
       services:
         type: object
         properties:
           vault:
             type: object
             properties:
               status:
                 type: string
           ldap:
             type: object
           notifications:
             type: array
             items:
               type: object
               properties:
                 kafka:
                   type: array
                   items:
                     type: object
       backend:
         type: object
         properties:
           backendType:
             type: string
       servers:
         type: array
         items:
           type: object
           properties:
             state:
               type: string
             endpoint:
               type: string
             uptime:
               type: string
             version:
               type: string
             commitID:
               type: string
             network:
               type: object
             disks:
               type: array
               items:
                 type: object
                 properties:
                   path:
                     type: string
                   state:
                     type: string
                   totalspace:
                     type: string
                   usedspace:
                     type: string
    UserInfo:
     properties:
       name:
         type: object
         properties:
           policyName:
             type: string
           status:
             type: string
    GroupInfo:
     properties:
       name:
         type: string
       status:
         type: string
       members:
         type: array
         items:
           type: string
       policy:
         type: string
    PolicyInfo:
     properties:
       name:
         type: object
         properties:
           Version:
             type: string
           Statement:
             type: array
             items:
               type: object
               properties:
                 Effect:
                   type: string
                 Action:
                   type: array
                   items:
                     type: string
                 Resource:
                   type: array
                   items:
                     type: string
    UserList:
      type: object
      $ref: "#/components/schemas/UserInfo"
    PolicyList:
      type: object
      $ref: "#/components/schemas/PolicyInfo"
    GroupList:
      type: array
      items:
        type: string

    BucketEvent:
     type: object
     properties:
       XMLname:
         type: object
         properties:
           Space:
             type: string
           Local:
             type: string
       LambdaConfigs:
         type: object
       TopicConfigs:
         type: object
       QueueConfigs:
         type: object
    BucketQuota:
     type: object
     properties:
       quota:
         type: integer
       quotatype:
         type: string
    BucketTags:
     type: object
    BucketInfo:
     type: object
     properties:
       name:
         type: string
       creationDate:
         type: string
    BucketList:
      type: array
      items:
       $ref: "#/components/schemas/BucketInfo"
    BucketListExtended:
      type: array
      items:
       type: object
       properties:
         events:
           $ref: "#/components/schemas/BucketEvent"
         info:
           $ref: "#/components/schemas/BucketInfo"
         quota:
           $ref: "#/components/schemas/BucketQuota"
         tags:
           $ref: "#/components/schemas/BucketTags"
    BucketLifecycle:
      type: string
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
    Success:
      type: object
      example: {"Success":"OK"}
      required:
        - Success
      properties:
        Success:
          type: string
